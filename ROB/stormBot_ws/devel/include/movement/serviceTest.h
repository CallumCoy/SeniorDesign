// Generated by gencpp from file movement/serviceTest.msg
// DO NOT EDIT!


#ifndef MOVEMENT_MESSAGE_SERVICETEST_H
#define MOVEMENT_MESSAGE_SERVICETEST_H

#include <ros/service_traits.h>


#include <movement/serviceTestRequest.h>
#include <movement/serviceTestResponse.h>


namespace movement
{

struct serviceTest
{

typedef serviceTestRequest Request;
typedef serviceTestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct serviceTest
} // namespace movement


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::movement::serviceTest > {
  static const char* value()
  {
    return "210a18f816d5b88becb133b82fae0c4c";
  }

  static const char* value(const ::movement::serviceTest&) { return value(); }
};

template<>
struct DataType< ::movement::serviceTest > {
  static const char* value()
  {
    return "movement/serviceTest";
  }

  static const char* value(const ::movement::serviceTest&) { return value(); }
};


// service_traits::MD5Sum< ::movement::serviceTestRequest> should match
// service_traits::MD5Sum< ::movement::serviceTest >
template<>
struct MD5Sum< ::movement::serviceTestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::movement::serviceTest >::value();
  }
  static const char* value(const ::movement::serviceTestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::movement::serviceTestRequest> should match
// service_traits::DataType< ::movement::serviceTest >
template<>
struct DataType< ::movement::serviceTestRequest>
{
  static const char* value()
  {
    return DataType< ::movement::serviceTest >::value();
  }
  static const char* value(const ::movement::serviceTestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::movement::serviceTestResponse> should match
// service_traits::MD5Sum< ::movement::serviceTest >
template<>
struct MD5Sum< ::movement::serviceTestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::movement::serviceTest >::value();
  }
  static const char* value(const ::movement::serviceTestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::movement::serviceTestResponse> should match
// service_traits::DataType< ::movement::serviceTest >
template<>
struct DataType< ::movement::serviceTestResponse>
{
  static const char* value()
  {
    return DataType< ::movement::serviceTest >::value();
  }
  static const char* value(const ::movement::serviceTestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOVEMENT_MESSAGE_SERVICETEST_H
